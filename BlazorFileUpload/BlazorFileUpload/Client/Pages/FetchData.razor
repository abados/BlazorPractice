@page "/fetchdata"
@using BlazorFileUpload.Shared
@using Microsoft.AspNetCore.Components.QuickGrid;
@inject HttpClient Http


<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>


@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <QuickGrid Items="forecasts.AsQueryable()" ResizableColumns>
    <PropertyColumn Property="f => f.Date" Format="dddd, dd MMMM yyyy" Sortable="true" />
    <PropertyColumn Property="f => f.TemperatureC" Title="Temp (C)" Sortable="true" />
    <PropertyColumn Property="f => f.TemperatureF" Title="Temp (F)" Sortable="true" />
    <PropertyColumn Property="f => f.Summary">
        <ColumnOptions>
            <input />
        </ColumnOptions>
    </PropertyColumn>
    <TemplateColumn>
        <div>
            <span>Wow, it's really @context.Summary today!</span>
        </div>
    </TemplateColumn>
</QuickGrid>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
   
    <div>
        <input type="button" class="btn btn-lg" id="prev" value="Previous" @onclick=PrevPage></input>
        @for (int i = CurPage-2 ; i <= CurPage+2; i++)
        {
            int j = i;
            @if (i > 0)
            {
                if (i == CurPage)
                {
                    <span class="px-2" style="font-weight:bold;cursor:pointer" @onclick="()=>ShowPage(j)">@i</span>
                }
                else
                {
                    <span class="px-2 " style="cursor:pointer" @onclick="()=>ShowPage(j)">@i</span>
                }

               
            }
        }
     
        <input type="button" class="btn btn-lg" id="next" value="next" @onclick=NextPage></input>
    </div>
}

@code {
    private WeatherForecast[]? forecasts;
    private int CurPage = 1;
    protected override async Task OnInitializedAsync()
    {
        await ShowPage();

    }

    protected async Task NextPage()
    {
        CurPage++;
        await ShowPage();
    }
    protected async Task PrevPage()
    {
        if(CurPage>1)
        {
            CurPage--;
            await ShowPage();
        }


    }

    protected async Task ShowPage(int i)
    {
        CurPage = i;
        await ShowPage();
    }
    protected async Task ShowPage()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>($"WeatherForecast?page={CurPage}");
    }
}
